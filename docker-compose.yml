version: "3.2"

services:
  mysql:
    container_name: mysql
    image: mysql:8.0.21
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    volumes:
      - "$PWD/mysql/data:/var/lib/mysql"
      - "$PWD/mysql/conf:/etc/mysql/conf.d/"
      - "$PWD/mysql/logs:/logs"
    ports:
      - "3306:3306"
    restart: always

  nacos1:
    hostname: nacos1
    container_name: nacos1
    image: nacos/nacos-server:latest
    environment:
      MODE: standalone
    ports:
      - "8848:8848"
    restart: always
    depends_on:
      - mysql

  nacos2:
    hostname: nacos2
    container_name: nacos2
    image: nacos/nacos-server:latest
    environment:
      MODE: standalone
    ports:
      - "8847:8848"
    restart: always
    depends_on:
      - mysql

  nginx:
    container_name: nginx
    image: nginx:latest
    volumes:
      - "$PWD/nginx/conf/nginx.conf:/etc/nginx/nginx.conf"
      - "$PWD/nginx/html:/usr/share/nginx/html"
      - "$PWD/nginx/logs:/var/log/nginx"
    ports:
      - "80:80"
    restart: always
    depends_on:
      - nacos1
      - nacos2

  es1:
    image: elasticsearch:7.12.1
    container_name: es1
    environment:
      - node.name=es1
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es2
      - cluster.initial_master_nodes=es1
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - "$PWD/elasticsearch/data/1:/usr/share/elasticsearch/data"
      - "$PWD/elasticsearch/plugins:/usr/share/elasticsearch/plugins"
      - "$PWD/elasticsearch/config/1/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
    ports:
      - 9200:9200
    networks:
      - elastic

  redis-master-1:
    image: redis
    container_name: redis-master-1
    restart: always
    volumes:
      - "$PWD/redis/master1/data:/data"
      - "$PWD/redis/master1/conf/redis.conf:/usr/local/etc/redis/redis.conf"
    command: redis-server /usr/local/etc/redis/redis.conf
    network_mode: "host"

  redis-master-2:
    image: redis
    container_name: redis-master-2
    restart: always
    volumes:
      - "$PWD/redis/master2/data:/data"
      - "$PWD/redis/master2/conf/redis.conf:/usr/local/etc/redis/redis.conf"
    command: redis-server /usr/local/etc/redis/redis.conf
    network_mode: "host"

  redis-master-3:
    image: redis
    container_name: redis-master-3
    restart: always
    volumes:
      - "$PWD/redis/master3/data:/data"
      - "$PWD/redis/master3/conf/redis.conf:/usr/local/etc/redis/redis.conf"
    command: redis-server /usr/local/etc/redis/redis.conf
    network_mode: "host"

  redis-slave-1:
    image: redis
    container_name: redis-slave-1
    restart: always
    volumes:
      - "$PWD/redis/slave1/data:/data"
      - "$PWD/redis/slave1/conf/redis.conf:/usr/local/etc/redis/redis.conf"
    command: redis-server /usr/local/etc/redis/redis.conf
    network_mode: "host"
    depends_on:
      - redis-master-1

  redis-slave-2:
    image: redis
    container_name: redis-slave-2
    restart: always
    volumes:
      - "$PWD/redis/slave2/data:/data"
      - "$PWD/redis/slave2/conf/redis.conf:/usr/local/etc/redis/redis.conf"
    command: redis-server /usr/local/etc/redis/redis.conf
    network_mode: "host"
    depends_on:
      - redis-master-2

  redis-slave-3:
    image: redis
    container_name: redis-slave-3
    restart: always
    volumes:
      - "$PWD/redis/slave3/data:/data"
      - "$PWD/redis/slave3/conf/redis.conf:/usr/local/etc/redis/redis.conf"
    command: redis-server /usr/local/etc/redis/redis.conf
    network_mode: "host"
    depends_on:
      - redis-master-3

  rabbitmq01:
    image: rabbitmq
    container_name: rabbitmq01
    ports:
      - "15672:15672"
      - "5672:5672"
    hostname: rabbitmq01
    restart: always
    privileged: true
    volumes:
      - "$PWD/rabbitmq/rabbitmq01/lib:/var/lib/rabbitmq"
      - "$PWD/rabbitmq/rabbitmq01/log:/var/log/rabbitmq"  # 防止log日志报failed to open log file

  seata-server:
    image: seataio/seata-server:1.3.0
    container_name: seata-server
    restart: always
    ports:
      - "8091:8091"
    environment:
      # 指定seata服务启动端口
      - SEATA_PORT=8091
      # 注册到nacos上的ip。客户端将通过该ip访问seata服务。
      - SEATA_IP=192.168.145.101
      - SEATA_CONFIG_NAME=file:/root/seata-config/registry
    volumes:
      - "$PWD/seataServer/conf:/root/seata-config"
      - "$PWD/seataServer/logs:/root/logs"

networks:
  elastic:
    driver: bridge


